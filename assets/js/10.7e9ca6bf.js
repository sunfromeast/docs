(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{191:function(e,v,t){e.exports=t.p+"assets/img/exception.761b41cc.png"},240:function(e,v,t){"use strict";t.r(v);var _=t(0),o=Object(_.a)({},function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"异常、断言、日志"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#异常、断言、日志","aria-hidden":"true"}},[e._v("#")]),e._v(" 异常、断言、日志")]),e._v(" "),_("h2",{attrs:{id:"异常"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#异常","aria-hidden":"true"}},[e._v("#")]),e._v(" 异常")]),e._v(" "),_("h3",{attrs:{id:"异常分类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#异常分类","aria-hidden":"true"}},[e._v("#")]),e._v(" 异常分类")]),e._v(" "),_("p",[e._v("Java的异常层次结构")]),e._v(" "),_("p",[_("img",{attrs:{src:t(191),alt:""}})]),e._v(" "),_("blockquote",[_("p",[e._v("说明：")]),e._v(" "),_("ol",[_("li",[e._v("所有的异常都是由"),_("code",[e._v("Throable")]),e._v("继承而来的，在下一层分解为"),_("code",[e._v("Error")]),e._v("和"),_("code",[e._v("Exception")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("Error")]),e._v("描述的是系统运行时的内部错误或者资源耗尽错误，应用程序不应该抛出这种类型的对象，如果抛出了，除了尽力使程序安全终止，其他的无能为力。")]),e._v(" "),_("li",[_("code",[e._v("Exception")]),e._v("下面又分为"),_("code",[e._v("RuntimeException")]),e._v("和"),_("code",[e._v("IOException")]),e._v("，程序错误导致的异常属于"),_("code",[e._v("RuntimeException")]),e._v("，程序本身没有错误，由"),_("code",[e._v("I/O")]),e._v("错误导致的异常属于"),_("code",[e._v("IOException")])]),e._v(" "),_("li",[_("code",[e._v("RuntimeException")]),e._v("包含：错误类型转换、数组越界、访问空指针等。如果出现"),_("code",[e._v("RuntimeException")]),e._v("，那一定是你的问题。")]),e._v(" "),_("li",[e._v("java将所有派生于"),_("code",[e._v("Error或者RuntimeException")]),e._v("的异常称为"),_("code",[e._v("非受检查异常")]),e._v("，其他异常属于"),_("code",[e._v("受检查异常")])])])]),e._v(" "),_("h3",{attrs:{id:"声明受检查异常"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#声明受检查异常","aria-hidden":"true"}},[e._v("#")]),e._v(" 声明受检查异常")]),e._v(" "),_("p",[e._v("自己编写方法时，不必将所有可能抛出的异常都进行声明，但是，在遇到下列情况时，应该抛出异常：")]),e._v(" "),_("blockquote",[_("ol",[_("li",[e._v("调用一个抛出受检异常的方法，例如："),_("code",[e._v("FileInputStream")])]),e._v(" "),_("li",[e._v("程序运行中出现错误，并且利用"),_("code",[e._v("throws")]),e._v("抛出一个受检异常")]),e._v(" "),_("li",[e._v("程序出现错误，例如出现数组越界异常")]),e._v(" "),_("li",[e._v("JVM或者运行时类库出现的内部错误")])]),e._v(" "),_("p",[e._v("对于前两种情况，必须告诉调用这个方法的程序员所有可能抛出的异常。")]),e._v(" "),_("p",[e._v("对于第三种情况，不需要声明从"),_("code",[e._v("RuntimeException")]),e._v("继承的那些非受检异常，因为这些错误其实可以在程序中进行控制修正。")]),e._v(" "),_("p",[e._v("对于第四种情况，也就是"),_("code",[e._v("Error")]),e._v("，其实任何代码都具有抛出这类异常的潜能，我们本身对其没有控制能力。")])]),e._v(" "),_("h3",{attrs:{id:"异常抛出和自定义异常"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#异常抛出和自定义异常","aria-hidden":"true"}},[e._v("#")]),e._v(" 异常抛出和自定义异常")]),e._v(" "),_("p",[e._v("一般系统提供了一些异常类，我们可以直接使用。当然，我们也可以自定义异常类，只需要定义一个派生于"),_("code",[e._v("Exception")]),e._v("或者"),_("code",[e._v("Exception子类")]),e._v("的类。定义的类应该包含两个构造器：一个默认构造器和一个带描述信息的构造器。")])])},[],!1,null,null,null);v.default=o.exports}}]);