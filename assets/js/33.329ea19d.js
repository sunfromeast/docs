(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{245:function(t,e,v){"use strict";v.r(e);var r=v(0),c=Object(r.a)({},function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("ApiServer作为Kubernetes集群的网关，是访问和管理资源对象的唯一入口。其余所有对集群资源的访问都要经由ApiServer这个网关。客户端每一次经由ApiServer访问集群资源时，都要对访问请求进行合法性校验（包括：身份认证、操作权限认证、是否符合全局规范约束）。所有检查通过，才能正常访问集群资源或将集群状态写入etcd。")]),t._v(" "),v("h2",{attrs:{id:"用户和用户组"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#用户和用户组","aria-hidden":"true"}},[t._v("#")]),t._v(" 用户和用户组")]),t._v(" "),v("p",[t._v("​\t客户端访问API服务的途径有三种：kubectl、客户端库、Restful API。而执行请求的主体也有两类")]),t._v(" "),v("ul",[v("li",[t._v("User Account（用户账号）：针对请求的发起者是人这个主体。Kubernetes本身不存在表示此类用户账号的对象，因此，不能直接添加到Kubernetes系统中。")]),t._v(" "),v("li",[t._v("Service Account（服务账号）：针对请求的发起者是非人（也就是请求由各种服务发出，如：pod）。Service Account通常需要绑定命名空间。ServiceAccount对象在创建时，系统会同时创建一个Secret对象用于保存该ServiceAccount对象访问ApiServer的token（凭据）。")])]),t._v(" "),v("p",[t._v("ServiceAccount可以隶属于一个或者多个group（用户组），group本身没有操作权限，只是用户账号的逻辑集合；但绑定到这个group上的权限可以由组内的所有用户继承，以实现高效的授权管理机制。")]),t._v(" "),v("p",[t._v("Kubernetes有一下几个内建的用于特殊目的的组：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("group名")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[v("code",[t._v("system:unauthenticated")])]),t._v(" "),v("td",[t._v("未通过任何认证授权插件的用户所属的组")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("system:authenticated")])]),t._v(" "),v("td",[t._v("通过认证的用户所属的组")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("system:serviceaccounts")])]),t._v(" "),v("td",[t._v("当前系统上的所有ServiceAccount对象")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("system:serviceaccounts:<namespace>")])]),t._v(" "),v("td",[t._v("特定命名空间中所有的ServiceAccount对象")])])])]),t._v(" "),v("p",[t._v("总之，对Kubernetes集群中所有的资源的访问对要进行权限认证，否则，即被视为匿名请求。")]),t._v(" "),v("h2",{attrs:{id:"认证、授权、准入控制基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#认证、授权、准入控制基础","aria-hidden":"true"}},[t._v("#")]),t._v(" 认证、授权、准入控制基础")]),t._v(" "),v("p",[t._v("Kubernetes对各种Api请求的认证方式主要是通过各种认证插件进行的。支持的认证方式包括")]),t._v(" "),v("ul",[v("li",[t._v("客户端证书")]),t._v(" "),v("li",[t._v("承载令牌（bearer tokens）")]),t._v(" "),v("li",[t._v("身份验证代理")]),t._v(" "),v("li",[t._v("HTTP Basic认证")])]),t._v(" "),v("p",[t._v("API Server接收到访问请求会调用认证插件尝试将以下属性与请求关联：")]),t._v(" "),v("ul",[v("li",[t._v("Username：用户名")]),t._v(" "),v("li",[t._v("UID：用户ID，确保身份唯一")]),t._v(" "),v("li",[t._v("Groups：用户所属组，用于权限指派和继承")]),t._v(" "),v("li",[t._v("Exter：键值对字符串。用于提供认证的额外信息。")])]),t._v(" "),v("p",[t._v("API Server支持多种认证方式，但至少要为User Account和Service Account各自启用一个认证插件。同时启用多个认证插件时，认证过程以串行方式进行，只要有一个插件认证成功即结束认证。")]),t._v(" "),v("p",[t._v("认证方式总结：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("认证类型")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("认证方式")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("证书认证")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("X509客户端证书认证")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("客户端在请求报文中携带证书，证书中的Subject标识将被识别为用户标识，其中：CN（common name）字段为用户名，O(Organization）是用户所属组")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("token令牌认证")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("引导令牌：Bootstrap Tokens")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("常用于新加入Kubernetes集群节点的认证过程，需要通过"),v("code",[t._v("--experimental-bootstrap-token-auth")]),t._v("选项启用。使用kubeadm join初始化集群就是这种认证方式。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}}),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("静态密码文件")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("用户名和密码存储为CSV格式，kube-apiserver使用"),v("code",[t._v("--basic-auth-file")]),t._v("选项进行加载")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}}),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("服务账户令牌")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("kube-apiserver自动启用。使用可选选项"),v("code",[t._v("--service-account-key-file")]),t._v("验证token中秘钥。省略时使用kube-apiserver自己的证书匹配的私钥文件 。ServiceAccount通常由APIServer自动创建，并通过ServiceAccount 准入控制器注入到Pod对象，包括ServiceAccount上的承载令牌，容器中的应用程序请求APIServer的服务时将以此完成身份认证。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}}),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("认证代理")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("APIServer从请求首部中识别用户，身份代理服务据此设置新的请求首部。")])])])])])},[],!1,null,null,null);e.default=c.exports}}]);